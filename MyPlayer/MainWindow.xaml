<Window x:Class="MyPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyPlayer"
        mc:Ignorable="d"
        MouseLeftButtonDown="Window_MOVE"
        Title="MainWindow" Height="450" Width="800"  Visibility="Visible" WindowStyle="None" AllowsTransparency="True" Background="{x:Null}" ResizeMode="NoResize"
   >
    <Window.Resources>

        <ImageBrush x:Key="Minimize icon" ImageSource="Assets/Minimize.png" Stretch="Fill"/>
        <ImageBrush x:Key="Miximize" ImageSource="Assets/maximaze11.png" Stretch="Fill"/>
        <ImageBrush x:Key="Close icon" ImageSource="Assets/CloseFull.png" Stretch="Fill"/>
        <ImageBrush x:Key="Heart icon" ImageSource="Assets/heartFully.png" Stretch="Fill"/>
        <ImageBrush x:Key="Home" ImageSource="Assets/homeFully.png" Stretch="Fill"/>
        <ImageBrush x:Key="AnimateHeart" ImageSource="Assets/Heartanim.png" Stretch="Fill"/>
        <ImageBrush x:Key="Playlist" ImageSource="Assets/PlaylistFullypng.png" Stretch="Fill"/>
        <ImageBrush x:Key="AnimateList" ImageSource="Assets/Listanim.png" Stretch="Fill"/>
        <ImageBrush x:Key="AnimateHome" ImageSource="Assets/Homeanim.png" Stretch="Fill"/>
        <ImageBrush x:Key="File" ImageSource="Assets/FileFull.png" Stretch="Fill"/>
        <ImageBrush x:Key="FileAnim" ImageSource="Assets/FileAnim.png" Stretch="Fill"/>
        <ImageBrush x:Key="inf" ImageSource="info.png" Stretch="Fill"/>
        <ImageBrush x:Key="infAnim" ImageSource="inf.png" Stretch="Fill"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="MinimizeStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Minimize icon}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Minimize icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Maximize" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Miximize}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Miximize}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Close icon}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Close icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HeartStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="heartFull.png"/>
                            </Border.OpacityMask>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Heart icon}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource AnimateHeart}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HomeStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="heartFull.png"/>
                            </Border.OpacityMask>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Home}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource AnimateHome}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PlayListStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="heartFull.png"/>
                            </Border.OpacityMask>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Playlist}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource AnimateList}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FileStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" OpacityMask="{x:Null}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource File}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource FileAnim}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="infostyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" OpacityMask="{x:Null}" Margin="-654,16,666,-7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource inf}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource infAnim}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid >

        <Grid.Effect>
            <DropShadowEffect/>
        </Grid.Effect>
        <Grid.Background>
            <ImageBrush ImageSource="Главная.png"/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="331*"/>
            <ColumnDefinition Width="65*"/>
        </Grid.ColumnDefinitions>

        <Button Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="18,6,0,0" VerticalAlignment="Top" Width="28" Height="22" Click="Button_MINIMIZED" BorderThickness="0" Grid.IsSharedSizeScope="True" BorderBrush="{x:Null}" Style="{DynamicResource MinimizeStyle}">
            <Button.Effect>
                <DropShadowEffect/>
            </Button.Effect>
            <Button.Background>
                <ImageBrush ImageSource="Для перемещения.png"/>
            </Button.Background>
            <Button.Foreground>
                <ImageBrush ImageSource="Свернуть1.png"/>
            </Button.Foreground>
            <Button.OpacityMask>
                <ImageBrush ImageSource="Свернуть1.png" Opacity="0.99"/>
            </Button.OpacityMask>
        </Button>
        <Button Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="56,6,0,0" VerticalAlignment="Top" Width="28" Height="22" RenderTransformOrigin="0.2,-0.545" BorderBrush="{x:Null}" Style="{DynamicResource Maximize}" >
            <Button.Foreground>
                <ImageBrush ImageSource="Assets/maximaze11.png"/>
            </Button.Foreground>
            <Button.OpacityMask>
                <ImageBrush ImageSource="Assets/maximaze11.png"/>
            </Button.OpacityMask>
            <Button.Background>
                <ImageBrush ImageSource="max.png"/>
            </Button.Background>
            <Button.Effect>
                <DropShadowEffect/>
            </Button.Effect>
        </Button>
        <Button Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="93,6,0,0" VerticalAlignment="Top" Width="28" Click="Button_CLOSE" Height="22" RenderTransformOrigin="0.2,-0.545" BorderBrush="{x:Null}" Style="{DynamicResource CloseStyle}" >
            <Button.Foreground>
                <ImageBrush ImageSource="CloseFull.png"/>
            </Button.Foreground>
            <Button.OpacityMask>
                <ImageBrush ImageSource="CloseFull.png"/>
            </Button.OpacityMask>
            <Button.Background>
                <ImageBrush ImageSource="Close.png"/>
            </Button.Background>
            <Button.Effect>
                <DropShadowEffect/>
            </Button.Effect>
        </Button>
        <Rectangle Grid.Column="1" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="0" Margin="795,304,-670,0" Stroke="Black" VerticalAlignment="Top" Width="6"/>
        <Button Content="" HorizontalAlignment="Left" Margin="13,105,0,0" VerticalAlignment="Top" Width="84" Height="64" Style="{DynamicResource HeartStyle}" BorderBrush="{x:Null}">
            <Button.OpacityMask>
                <ImageBrush ImageSource="heartFull.png"/>
            </Button.OpacityMask>
            <Button.Foreground>
                <ImageBrush ImageSource="heartFull.png"/>
            </Button.Foreground>
            <Button.Background>
                <ImageBrush ImageSource="heart1.png"/>
            </Button.Background>
        </Button>
        <Button Content="" HorizontalAlignment="Left" Margin="13,31,0,0" VerticalAlignment="Top" Width="84" Height="64" Style="{DynamicResource HomeStyle}" BorderBrush="{x:Null}">
            <Button.OpacityMask>
                <ImageBrush ImageSource="homeFull.png"/>
            </Button.OpacityMask>
            <Button.Foreground>
                <ImageBrush ImageSource="homeFull.png"/>
            </Button.Foreground>
            <Button.Background>
                <ImageBrush ImageSource="Home.png"/>
            </Button.Background>
        </Button>
        <Button Content="" HorizontalAlignment="Left" Margin="13,180,0,0" VerticalAlignment="Top" Width="84" Height="64" Style="{DynamicResource PlayListStyle}" BorderBrush="{x:Null}">
            <Button.OpacityMask>
                <ImageBrush ImageSource="PlaylistFull1.png"/>
            </Button.OpacityMask>
            <Button.Foreground>
                <ImageBrush ImageSource="PlaylistFull1.png"/>
            </Button.Foreground>
            <Button.Background>
                <ImageBrush ImageSource="Playlist1.png"/>
            </Button.Background>
        </Button>
        <Image HorizontalAlignment="Left" Height="330" Margin="123,47,0,0" VerticalAlignment="Top" Width="469" Source="Player.png"/>
        <Button Content="" HorizontalAlignment="Left" Margin="139,383,0,0" VerticalAlignment="Top" Width="53" Height="43" BorderBrush="{x:Null}" Style="{DynamicResource FileStyle}" Click="Button_open">
            <Button.OpacityMask>
                <ImageBrush ImageSource="FileFull.png"/>
            </Button.OpacityMask>
            <Button.Foreground>
                <ImageBrush ImageSource="FileFull.png"/>
            </Button.Foreground>
            <Button.Background>
                <ImageBrush ImageSource="File.png"/>
            </Button.Background>
        </Button>
        <Image HorizontalAlignment="Left" Height="47" Margin="532,311,0,0" VerticalAlignment="Top" Width="49" Source="Volume.png"/>
        <Image Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="330" Margin="592,48,0,0" VerticalAlignment="Top" Width="190" Source="List.png"/>
        <Button Content="Play" x:Name='PlayButton' VerticalAlignment="Center" Width="75" RenderTransformOrigin="0.421,0.281" Height="46" Click="Button_Play" Margin="0,312,273,92" BorderBrush="{x:Null}" Foreground="White" HorizontalAlignment="Right">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFF00C5" Offset="0"/>
                    <GradientStop Color="#FFE233DA" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <ListBox Grid.ColumnSpan="2" x:Name ="Playlist"  HorizontalAlignment="Left" Height="276" Margin="604,76,0,0" VerticalAlignment="Top" Width="164"/>

        <Label x:Name="label1" Content="00:00:00&#xA;" HorizontalAlignment="Left" Margin="147,265,0,0" VerticalAlignment="Top" Width="53" Height="24" Foreground="#DDFFFFFF"/>
        <Label x:Name="label2" Content="00:00:00&#xA;" HorizontalAlignment="Left" Margin="488,265,0,161" Width="53" Foreground="#DDFFFFFF"/>
        <Button Content="Stop" HorizontalAlignment="Left" Margin="139,321,0,0" VerticalAlignment="Top" Width="45" Click="Button_STOP" Height="25" Padding="5,4" FontSize="10"/>
        <Label Content="Выберите файл для воспроизведения" x:Name="label3" Margin="189,88,0,338" VerticalAlignment="Center" Height="24" Width="342" Foreground="#DDFFFFFF" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
        <ProgressBar x:Name="Prog" HorizontalAlignment="Left" Height="5" Margin="143,294,0,0" VerticalAlignment="Top" Width="400" MouseLeftButtonDown="Prog_MouseLeftButtonUp" Cursor="Hand">
            <ProgressBar.OpacityMask>
                <ImageBrush ImageSource="ProgBAr.png"/>
            </ProgressBar.OpacityMask>
        </ProgressBar>
        <Button Content="Next" HorizontalAlignment="Left" Margin="401,319,0,0" VerticalAlignment="Top" Width="56" FontSize="10" Click="Button_Next"/>
        <Button Content="Previous" HorizontalAlignment="Left" Margin="260,319,0,0" VerticalAlignment="Top" Width="56" FontSize="10" TextOptions.TextHintingMode="Fixed" FontWeight="Medium" Padding="5,4" Click="Button_Prev"/>
        <Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"/>
        <Button Content="" HorizontalAlignment="Left" Margin="46,397,0,10" Width="53" BorderBrush="{x:Null}" Style="{DynamicResource infostyle}" Click="inf_open" RenderTransformOrigin="0.472,0.558" Grid.Column="1">
            <Button.OpacityMask>
                <ImageBrush ImageSource="inf1.png"/>
            </Button.OpacityMask>
            <Button.Foreground>
                <ImageBrush ImageSource="inf1.png"/>
            </Button.Foreground>
            <Button.Background>
                <ImageBrush ImageSource="inf.png"/>
            </Button.Background>
        </Button>
        <Slider HorizontalAlignment="Left" x:Name="Vol" Margin="512,309,0,0" Minimum ="0" Maximum="100" VerticalAlignment="Top" Style ="{StaticResource MaterialDesignDiscreteSlider}" Height="54" Width="103" Foreground="White" OpacityMask="White" ValueChanged="Slider_ValueChanged" LargeChange="0.1" SmallChange="0.01" Value="100">
            <Slider.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90.474"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Slider.RenderTransform>
        </Slider>
    </Grid>
</Window>